PSUEDOCODE FOR USER FUNCTIONS: 

if currentToken = ":" then save next token in user hashtable as key
    the value in hashtable should be a stream or array of the following tokens (until ;)

for every token in definition do normal input conditions until...
if you see a special word, parse the following tokens until the partner word is found (ex: if, then , else)
    save the tokens as a subtree = top_parse(currPosition, definition)
    if is boolean -- if the previous value on stack is == to the token after if, continue to then (end)
        if false, skip to the else and execute those tokens
    


void get_definition(GHashTable* hashtable, char* definition[], int length) {
    for (int i = 0; i < length; i++) {
        char* currentToken = definition[i];
        if (strcmp(currentToken, ":") == 0) {
            char* key = definition[i + 1]; //next word is function name (key)
            token_t* value = malloc((length - i - 2) * sizeof(token_t));
            i += 2;
            int j = 0;
            while (strcmp(definition[i], ";") != 0) {
                value[j] = definition[i];
                i++;
                j++;
            }
            user_insert(hashtable, key, value);
        }
    }
}
